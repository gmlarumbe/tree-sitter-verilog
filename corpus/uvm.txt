============================================
uvm - virtual function
============================================

class uvm_callbacks_base extends uvm_object;

  virtual function bit m_am_i_a(uvm_object obj);
    return 0;
  endfunction

endclass

----

(source_file (package_or_generate_item_declaration (class_declaration (class_identifier (simple_identifier))
  (class_type (class_identifier (simple_identifier)))
  (class_item (class_method (method_qualifier)
    (function_declaration
      (function_body_declaration
        (function_data_type_or_implicit1
          (data_type_or_void (data_type (integer_vector_type)))
        )
        (function_identifier (function_identifier (simple_identifier)))
        (tf_port_list
          (tf_port_item1
            (data_type_or_implicit1
              (data_type (simple_identifier))
            )
            (port_identifier (simple_identifier))
          )
        )
        (function_statement_or_null
          (function_statement
            (statement (statement_item (jump_statement (expression
              (primary (primary_literal (integral_number (decimal_number (unsigned_number)))))
            ))))
          )
        )
      )
    )
  ))
)))



============================================
uvm - uvm_config_db
============================================

module foo;
    initial  begin
        uvm_config_db::get(null, "", "some_type", m_some_type);
        uvm_config_db #(some_type)::get(null, "", "some_type", m_some_type);
        if(!uvm_config_db #(some_type)::get(null, "", "some_type", m_some_type)) begin
           `uvm_error(get_name(), $sformatf("Error! Couldn not find %s", m_some_type))
        end
    end
endmodule

----

(source_file
  (module_declaration
    (module_header
      (module_keyword)
      (simple_identifier))
    (module_or_generate_item
      (initial_construct
        (statement_or_null
          (statement
            (statement_item
              (seq_block
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (class_scope
                          (class_type
                            (class_identifier
                              (simple_identifier))))
                        (tf_call
                          (simple_identifier)
                          (list_of_arguments_parent
                            (expression
                              (primary))
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal))))
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal))))
                            (expression
                              (primary
                                (simple_identifier)))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (subroutine_call_statement
                        (class_scope
                          (class_type
                            (class_identifier
                              (simple_identifier))
                            (parameter_value_assignment
                              (list_of_parameter_assignments
                                (ordered_parameter_assignment
                                  (_ordered_parameter_assignment
                                    (data_type
                                      (simple_identifier))))))))
                        (tf_call
                          (simple_identifier)
                          (list_of_arguments_parent
                            (expression
                              (primary))
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal))))
                            (expression
                              (primary
                                (primary_literal
                                  (string_literal))))
                            (expression
                              (primary
                                (simple_identifier)))))))))
                (statement_or_null
                  (statement
                    (statement_item
                      (conditional_statement
                        (cond_predicate
                          (expression
                            (unary_operator)
                            (primary
                              (class_scope
                                (class_type
                                  (class_identifier
                                    (simple_identifier))
                                  (parameter_value_assignment
                                    (list_of_parameter_assignments
                                      (ordered_parameter_assignment
                                        (_ordered_parameter_assignment
                                          (data_type
                                            (simple_identifier))))))))
                              (tf_call
                                (simple_identifier)
                                (list_of_arguments_parent
                                  (expression
                                    (primary))
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal))))
                                  (expression
                                    (primary
                                      (primary_literal
                                        (string_literal))))
                                  (expression
                                    (primary
                                      (simple_identifier))))))))
                        (statement_or_null
                          (statement
                            (statement_item
                              (seq_block
                                (statement_or_null
                                  (statement
                                    (text_macro_usage
                                      (text_macro_identifier
                                        (simple_identifier))
                                      (list_of_actual_arguments
                                        (expression
                                          (primary
                                            (let_expression
                                              (simple_identifier))))
                                        (expression
                                          (primary
                                            (function_subroutine_call
                                              (subroutine_call
                                                (system_tf_call
                                                  (system_tf_identifier)
                                                  (expression
                                                    (primary
                                                      (primary_literal
                                                        (string_literal))))
                                                  (expression
                                                    (primary
                                                      (simple_identifier))))))))))))))))))))))))))))



============================================
uvm - macros: component_utils
============================================

class comp extends uvm_component;
  `uvm_component_utils(comp)
  // ...
endclass

----

(source_file
  (package_or_generate_item_declaration
    (class_declaration
      (class_identifier
        (simple_identifier))
      (class_type
        (class_identifier
          (simple_identifier)))
      (class_item
        (text_macro_usage
          (text_macro_identifier
            (simple_identifier))
          (list_of_actual_arguments
            (expression
              (primary
                (simple_identifier))))))
      (comment))))


============================================
uvm - macros: component_param_utils
============================================

class driver #(type T=int) extends uvm_component;
  `uvm_component_param_utils(driver #(T));
   //  ...
endclass

----

(source_file
  (package_or_generate_item_declaration
    (class_declaration
      (class_identifier
        (simple_identifier))
      (parameter_port_list
        (parameter_port_declaration
          (list_of_type_assignments
            (type_assignment
              (simple_identifier)
              (data_type
                (integer_atom_type))))))
      (class_type
        (class_identifier
          (simple_identifier)))
      (class_item
        (text_macro_usage
          (text_macro_identifier
            (simple_identifier))))
      (ERROR
        (class_type
          (class_identifier
            (simple_identifier))
          (parameter_value_assignment
            (list_of_parameter_assignments
              (ordered_parameter_assignment
                (_ordered_parameter_assignment
                  (data_type
                    (simple_identifier))))))))
      (class_item)
      (comment))))
